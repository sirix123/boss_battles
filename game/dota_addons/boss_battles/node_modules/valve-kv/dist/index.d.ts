export declare type KVObject = {
    [key: string]: KVValue;
};
export declare type KVValue = KVObject | string | number | Array<KVValue>;
export declare type DuplicateKeyArray<T extends KVValue> = {
    _duplicateKeyBrand: true;
} & Array<T>;
export { serialize } from "./serialize";
export { deserialize, deserializeFile } from "./deserialize";
export declare function isKvObject(value: KVValue): value is KVObject;
export declare function isDuplicateKeyArray<T extends KVValue>(array: Array<T>): array is DuplicateKeyArray<T>;
export declare function arrayToKvObject<T extends KVValue>(array: T[]): KVObject;
export declare function arrayFromKvObject(kvobject: KVObject): KVValue[];
export declare function createDuplicateKeyArray<T extends KVValue>(array: Array<T>): DuplicateKeyArray<T>;
